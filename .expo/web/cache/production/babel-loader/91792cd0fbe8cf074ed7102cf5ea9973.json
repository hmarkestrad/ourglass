{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{TIME_SET_ACTION,DISMISS_ACTION,ANDROID_DISPLAY}from\"./constants\";import NativeModules from\"react-native-web/dist/exports/NativeModules\";import{toMilliseconds}from\"./utils\";var TimePickerAndroid=function(){function TimePickerAndroid(){_classCallCheck(this,TimePickerAndroid);}_createClass(TimePickerAndroid,null,[{key:\"open\",value:function open(options){return _regeneratorRuntime.async(function open$(_context){while(1){switch(_context.prev=_context.next){case 0:toMilliseconds(options,'value');options.display=options.display||ANDROID_DISPLAY.default;return _context.abrupt(\"return\",NativeModules.RNTimePickerAndroid.open(options));case 3:case\"end\":return _context.stop();}}},null,null,null,Promise);}},{key:\"dismiss\",value:function dismiss(){return _regeneratorRuntime.async(function dismiss$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",NativeModules.RNTimePickerAndroid.dismiss());case 1:case\"end\":return _context2.stop();}}},null,null,null,Promise);}}]);return TimePickerAndroid;}();TimePickerAndroid.timeSetAction=TIME_SET_ACTION;TimePickerAndroid.dismissedAction=DISMISS_ACTION;export{TimePickerAndroid as default};","map":{"version":3,"names":["TIME_SET_ACTION","DISMISS_ACTION","ANDROID_DISPLAY","toMilliseconds","TimePickerAndroid","options","display","default","NativeModules","RNTimePickerAndroid","open","dismiss","timeSetAction","dismissedAction"],"sources":["/Users/mestrada/Documents/GitHub/ourglass-app/node_modules/@react-native-community/datetimepicker/src/timepicker.android.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\nimport {TIME_SET_ACTION, DISMISS_ACTION, ANDROID_DISPLAY} from './constants';\nimport {NativeModules} from 'react-native';\nimport {toMilliseconds} from './utils';\n\nimport type {TimePickerOptions, DateTimePickerResult} from './types';\n\nexport default class TimePickerAndroid {\n  /**\n   * Opens the standard Android time picker dialog.\n   *\n   * The available keys for the `options` object are:\n   *   - `value` (`Date` object) - date to show by default\n   *   * `is24Hour` (boolean) - If `true`, the picker uses the 24-hour format. If `false`,\n   *     the picker shows an AM/PM chooser. If undefined, the default for the current locale\n   *     is used.\n   *   * `minuteInterval` (enum(1 | 5 | 10 | 15 | 20 | 30)`) - set the time picker minutes' interval\n   *   * `mode` (`enum('clock', 'spinner', 'default')`) - set the time picker mode\n   *     - 'clock': Show a time picker in clock mode.\n   *     - 'spinner': Show a time picker in spinner mode.\n   *     - 'default': Show a default time picker based on Android versions.\n   *\n   * Returns a Promise which will be invoked an object containing `action`, `hour` (0-23),\n   * `minute` (0-59) if the user picked a time. If the user dismissed the dialog, the Promise will\n   * still be resolved with action being `TimePickerAndroid.dismissedAction` and all the other keys\n   * being undefined. **Always** check whether the `action` before reading the values.\n   */\n  static async open(options: TimePickerOptions): Promise<DateTimePickerResult> {\n    toMilliseconds(options, 'value');\n    options.display = options.display || ANDROID_DISPLAY.default;\n\n    return NativeModules.RNTimePickerAndroid.open(options);\n  }\n\n  static async dismiss(): Promise<boolean> {\n    return NativeModules.RNTimePickerAndroid.dismiss();\n  }\n\n  /**\n   * A time has been selected.\n   */\n  static +timeSetAction: 'timeSetAction' = TIME_SET_ACTION;\n  /**\n   * The dialog has been dismissed.\n   */\n  static +dismissedAction: 'dismissedAction' = DISMISS_ACTION;\n}\n"],"mappings":"4LASA,OAAQA,eAAR,CAAyBC,cAAzB,CAAyCC,eAAzC,mB,uEAEA,OAAQC,cAAR,e,GAIqBC,kB,yIAoBnB,cAAkBC,OAAlB,gHACEF,cAAc,CAACE,OAAD,CAAU,OAAV,CAAd,CACAA,OAAO,CAACC,OAAR,CAAkBD,OAAO,CAACC,OAAR,EAAmBJ,eAAe,CAACK,OAArD,CAFF,gCAISC,aAAa,CAACC,mBAAd,CAAkCC,IAAlC,CAAuCL,OAAvC,CAJT,uE,uBAOA,wKACSG,aAAa,CAACC,mBAAd,CAAkCE,OAAlC,EADT,wE,iCA3BmBP,iB,CAkCXQ,a,CAAiCZ,e,CAlCtBI,iB,CAsCXS,e,CAAqCZ,c,QAtC1BG,iB"},"metadata":{},"sourceType":"module"}