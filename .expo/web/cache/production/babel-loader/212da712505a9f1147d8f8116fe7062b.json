{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{DATE_SET_ACTION,TIME_SET_ACTION,DISMISS_ACTION,NEUTRAL_BUTTON_ACTION,ANDROID_DISPLAY,ANDROID_MODE,ANDROID_EVT_TYPE,EVENT_TYPE_SET}from\"./constants\";import invariant from'invariant';import{getOpenPicker,timeZoneOffsetDateSetter,validateAndroidProps}from\"./androidUtils\";import pickers from\"./picker.android\";function open(props){var _props$mode=props.mode,mode=_props$mode===void 0?ANDROID_MODE.date:_props$mode,_props$display=props.display,display=_props$display===void 0?ANDROID_DISPLAY.default:_props$display,originalValue=props.value,is24Hour=props.is24Hour,minimumDate=props.minimumDate,maximumDate=props.maximumDate,neutralButtonLabel=props.neutralButtonLabel,minuteInterval=props.minuteInterval,timeZoneOffsetInMinutes=props.timeZoneOffsetInMinutes,onChange=props.onChange,onError=props.onError;validateAndroidProps(props);invariant(originalValue,'A date or time must be specified as `value` prop.');var valueTimestamp=originalValue.getTime();var openPicker=getOpenPicker({mode:mode,value:valueTimestamp,display:display,is24Hour:is24Hour,minimumDate:minimumDate,maximumDate:maximumDate,neutralButtonLabel:neutralButtonLabel,minuteInterval:minuteInterval,timeZoneOffsetInMinutes:timeZoneOffsetInMinutes});var presentPicker=function _callee(){var _await$openPicker,action,day,month,year,minute,hour,date,event;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(openPicker());case 3:_await$openPicker=_context.sent;action=_await$openPicker.action;day=_await$openPicker.day;month=_await$openPicker.month;year=_await$openPicker.year;minute=_await$openPicker.minute;hour=_await$openPicker.hour;date=new Date(valueTimestamp);event={type:EVENT_TYPE_SET,nativeEvent:{}};_context.t0=action;_context.next=_context.t0===DATE_SET_ACTION?15:_context.t0===TIME_SET_ACTION?20:_context.t0===NEUTRAL_BUTTON_ACTION?25:_context.t0===DISMISS_ACTION?28:28;break;case 15:date.setFullYear(year,month,day);date=timeZoneOffsetDateSetter(date,timeZoneOffsetInMinutes);event.nativeEvent.timestamp=date.getTime();onChange==null?void 0:onChange(event,date);return _context.abrupt(\"break\",31);case 20:date.setHours(hour,minute);date=timeZoneOffsetDateSetter(date,timeZoneOffsetInMinutes);event.nativeEvent.timestamp=date.getTime();onChange==null?void 0:onChange(event,date);return _context.abrupt(\"break\",31);case 25:event.type=ANDROID_EVT_TYPE.neutralButtonPressed;onChange==null?void 0:onChange(event,originalValue);return _context.abrupt(\"break\",31);case 28:event.type=ANDROID_EVT_TYPE.dismissed;onChange==null?void 0:onChange(event,originalValue);return _context.abrupt(\"break\",31);case 31:_context.next=36;break;case 33:_context.prev=33;_context.t1=_context[\"catch\"](0);onError&&onError(_context.t1);case 36:case\"end\":return _context.stop();}}},null,null,[[0,33]],Promise);};presentPicker();}function dismiss(mode){pickers[mode].dismiss();}export var DateTimePickerAndroid={open:open,dismiss:dismiss};","map":{"version":3,"names":["DATE_SET_ACTION","TIME_SET_ACTION","DISMISS_ACTION","NEUTRAL_BUTTON_ACTION","ANDROID_DISPLAY","ANDROID_MODE","ANDROID_EVT_TYPE","EVENT_TYPE_SET","invariant","getOpenPicker","timeZoneOffsetDateSetter","validateAndroidProps","pickers","open","props","mode","date","display","default","originalValue","value","is24Hour","minimumDate","maximumDate","neutralButtonLabel","minuteInterval","timeZoneOffsetInMinutes","onChange","onError","valueTimestamp","getTime","openPicker","presentPicker","action","day","month","year","minute","hour","Date","event","type","nativeEvent","setFullYear","timestamp","setHours","neutralButtonPressed","dismissed","dismiss","DateTimePickerAndroid"],"sources":["/Users/mestrada/Documents/GitHub/ourglass-app/node_modules/@react-native-community/datetimepicker/src/DateTimePickerAndroid.js"],"sourcesContent":["/**\n * @format\n * @flow strict-local\n */\nimport {\n  DATE_SET_ACTION,\n  TIME_SET_ACTION,\n  DISMISS_ACTION,\n  NEUTRAL_BUTTON_ACTION,\n  ANDROID_DISPLAY,\n  ANDROID_MODE,\n  ANDROID_EVT_TYPE,\n  EVENT_TYPE_SET,\n} from './constants';\nimport invariant from 'invariant';\n\nimport type {DateTimePickerEvent, AndroidNativeProps} from './types';\nimport {\n  getOpenPicker,\n  timeZoneOffsetDateSetter,\n  validateAndroidProps,\n} from './androidUtils';\nimport pickers from './picker.android';\n\nfunction open(props: AndroidNativeProps) {\n  const {\n    mode = ANDROID_MODE.date,\n    display = ANDROID_DISPLAY.default,\n    value: originalValue,\n    is24Hour,\n    minimumDate,\n    maximumDate,\n    neutralButtonLabel,\n    minuteInterval,\n    timeZoneOffsetInMinutes,\n    onChange,\n    onError,\n  } = props;\n  validateAndroidProps(props);\n  invariant(originalValue, 'A date or time must be specified as `value` prop.');\n\n  const valueTimestamp = originalValue.getTime();\n  const openPicker = getOpenPicker({\n    mode,\n    value: valueTimestamp,\n    display,\n    is24Hour,\n    minimumDate,\n    maximumDate,\n    neutralButtonLabel,\n    minuteInterval,\n    timeZoneOffsetInMinutes,\n  });\n\n  const presentPicker = async () => {\n    try {\n      const {action, day, month, year, minute, hour} = await openPicker();\n      let date = new Date(valueTimestamp);\n      let event: DateTimePickerEvent = {\n        type: EVENT_TYPE_SET,\n        nativeEvent: {},\n      };\n\n      switch (action) {\n        case DATE_SET_ACTION:\n          date.setFullYear(year, month, day);\n          date = timeZoneOffsetDateSetter(date, timeZoneOffsetInMinutes);\n          event.nativeEvent.timestamp = date.getTime();\n          onChange?.(event, date);\n          break;\n\n        case TIME_SET_ACTION:\n          date.setHours(hour, minute);\n          date = timeZoneOffsetDateSetter(date, timeZoneOffsetInMinutes);\n          event.nativeEvent.timestamp = date.getTime();\n          onChange?.(event, date);\n          break;\n\n        case NEUTRAL_BUTTON_ACTION:\n          event.type = ANDROID_EVT_TYPE.neutralButtonPressed;\n          onChange?.(event, originalValue);\n          break;\n\n        case DISMISS_ACTION:\n        default:\n          event.type = ANDROID_EVT_TYPE.dismissed;\n          onChange?.(event, originalValue);\n          break;\n      }\n    } catch (error) {\n      onError && onError(error);\n    }\n  };\n  presentPicker();\n}\n\nfunction dismiss(mode: AndroidNativeProps['mode']) {\n  // $FlowFixMe - `AbstractComponent` [1] is not an instance type.\n  pickers[mode].dismiss();\n}\n\nexport const DateTimePickerAndroid = {open, dismiss};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}