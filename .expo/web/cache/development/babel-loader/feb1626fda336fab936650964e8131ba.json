{"ast":null,"code":"import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Ionicons } from '@expo/vector-icons';\nimport Dash from \"../src/components/Dash\";\nimport Account from \"../src/components/Account\";\nimport TickerForm from \"../src/components/TickerForm\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar Tabs = function Tabs() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        showLabel: false,\n        style: {\n          position: 'absolute',\n          bottom: 20,\n          left: 15,\n          right: 15,\n          elevation: 0,\n          backgroundColor: '#ffffff',\n          borderRadius: 10,\n          height: 100\n        },\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n\n          if (route.name === 'Dash') {\n            return _jsx(Ionicons, {\n              name: focused ? 'timer' : 'timer-outline',\n              size: 32,\n              color: color\n            });\n          } else if (route.name === 'Account') {\n            return _jsx(Ionicons, {\n              name: focused ? 'person-circle' : 'person-circle-outline',\n              size: 32,\n              color: color\n            });\n          } else if (route.name === 'Create') {\n            return _jsx(Ionicons, {\n              name: focused ? \"add-circle\" : 'add-circle-outline',\n              size: 32,\n              color: color\n            });\n          }\n        },\n        tabBarActiveTintColor: 'cadetblue',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Account\",\n      component: Account\n    }), _jsx(Tab.Screen, {\n      style: styles.shadow,\n      name: \"Dash\",\n      component: Dash\n    }), _jsx(Tab.Screen, {\n      name: \"Create\",\n      component: TickerForm\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  shadow: {\n    shadowColor: 'gray',\n    shadowOffset: {\n      width: 0,\n      height: 10\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.5,\n    elevation: 3,\n    fontWeight: 'bold'\n  }\n});\nexport default Tabs;","map":{"version":3,"names":["React","createBottomTabNavigator","Ionicons","Dash","Account","TickerForm","Tab","Tabs","route","showLabel","style","position","bottom","left","right","elevation","backgroundColor","borderRadius","height","tabBarIcon","focused","color","size","name","tabBarActiveTintColor","tabBarInactiveTintColor","styles","shadow","StyleSheet","create","shadowColor","shadowOffset","width","shadowOpacity","shadowRadius","fontWeight"],"sources":["/Users/mestrada/Documents/GitHub/ourglass-app/navigation/Tabs.js"],"sourcesContent":["import React from 'react';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport { StyleSheet, Image, Text, View, TouchableOpacity } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport Dash from '../src/components/Dash';\nimport Account from '../src/components/Account';\nimport TickerForm from '../src/components/TickerForm';\n\nconst Tab = createBottomTabNavigator();\n\nconst Tabs = () => {\n    return (\n        <Tab.Navigator\n            screenOptions={({ route }) =>({\n                showLabel: false,\n                style: {\n                    position: 'absolute',\n                    bottom: 20,\n                    left: 15,\n                    right: 15,\n                    elevation: 0,\n                    backgroundColor: '#ffffff',\n                    borderRadius: 10,\n                    height: 100,\n                },\n                tabBarIcon: ({ focused, color, size }) => {\n                    if (route.name === 'Dash') {\n                      return (\n                        <Ionicons\n                          name={\n                            focused\n                              ? 'timer'\n                              : 'timer-outline'\n                          }\n                          size={32}\n                          color={color}\n                        />\n                      );\n                    } else if (route.name === 'Account') {\n                      return (\n                        <Ionicons\n                          name={focused ? 'person-circle' : 'person-circle-outline'}\n                          size={32}\n                          color={color}\n                        />\n                      );\n                    \n                    } else if (route.name === 'Create') {\n                      return (\n                        <Ionicons\n                          name={focused ? \"add-circle\" : 'add-circle-outline'}\n                          size={32}\n                          color={color}\n                        />\n                      );\n                    }\n                  },\n                  tabBarActiveTintColor: 'cadetblue',\n                tabBarInactiveTintColor: 'gray',\n\n            })}>\n        <Tab.Screen name=\"Account\" component={Account} />\n        <Tab.Screen style={styles.shadow} name=\"Dash\" component={Dash} />\n        <Tab.Screen name=\"Create\" component={TickerForm} />\n      </Tab.Navigator>\n    );\n}\n\nconst styles = StyleSheet.create({\n    shadow: {\n        shadowColor: 'gray',\n        shadowOffset: {\n            width: 0,\n            height: 10,\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.5,\n        elevation: 3,\n        fontWeight: 'bold',\n    }\n})\nexport default Tabs;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,QAAyC,+BAAzC;;;;;;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,OAAOC,UAAP;;;AAEA,IAAMC,GAAG,GAAGL,wBAAwB,EAApC;;AAEA,IAAMM,IAAI,GAAG,SAAPA,IAAO,GAAM;EACf,OACI,MAAC,GAAD,CAAK,SAAL;IACI,aAAa,EAAE;MAAA,IAAGC,KAAH,QAAGA,KAAH;MAAA,OAAe;QAC1BC,SAAS,EAAE,KADe;QAE1BC,KAAK,EAAE;UACHC,QAAQ,EAAE,UADP;UAEHC,MAAM,EAAE,EAFL;UAGHC,IAAI,EAAE,EAHH;UAIHC,KAAK,EAAE,EAJJ;UAKHC,SAAS,EAAE,CALR;UAMHC,eAAe,EAAE,SANd;UAOHC,YAAY,EAAE,EAPX;UAQHC,MAAM,EAAE;QARL,CAFmB;QAY1BC,UAAU,EAAE,2BAA8B;UAAA,IAA3BC,OAA2B,SAA3BA,OAA2B;UAAA,IAAlBC,KAAkB,SAAlBA,KAAkB;UAAA,IAAXC,IAAW,SAAXA,IAAW;;UACtC,IAAId,KAAK,CAACe,IAAN,KAAe,MAAnB,EAA2B;YACzB,OACE,KAAC,QAAD;cACE,IAAI,EACFH,OAAO,GACH,OADG,GAEH,eAJR;cAME,IAAI,EAAE,EANR;cAOE,KAAK,EAAEC;YAPT,EADF;UAWD,CAZD,MAYO,IAAIb,KAAK,CAACe,IAAN,KAAe,SAAnB,EAA8B;YACnC,OACE,KAAC,QAAD;cACE,IAAI,EAAEH,OAAO,GAAG,eAAH,GAAqB,uBADpC;cAEE,IAAI,EAAE,EAFR;cAGE,KAAK,EAAEC;YAHT,EADF;UAQD,CATM,MASA,IAAIb,KAAK,CAACe,IAAN,KAAe,QAAnB,EAA6B;YAClC,OACE,KAAC,QAAD;cACE,IAAI,EAAEH,OAAO,GAAG,YAAH,GAAkB,oBADjC;cAEE,IAAI,EAAE,EAFR;cAGE,KAAK,EAAEC;YAHT,EADF;UAOD;QACF,CA3CuB;QA4CxBG,qBAAqB,EAAE,WA5CC;QA6C1BC,uBAAuB,EAAE;MA7CC,CAAf;IAAA,CADnB;IAAA,WAiDA,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAC,SAAjB;MAA2B,SAAS,EAAErB;IAAtC,EAjDA,EAkDA,KAAC,GAAD,CAAK,MAAL;MAAY,KAAK,EAAEsB,MAAM,CAACC,MAA1B;MAAkC,IAAI,EAAC,MAAvC;MAA8C,SAAS,EAAExB;IAAzD,EAlDA,EAmDA,KAAC,GAAD,CAAK,MAAL;MAAY,IAAI,EAAC,QAAjB;MAA0B,SAAS,EAAEE;IAArC,EAnDA;EAAA,EADJ;AAuDH,CAxDD;;AA0DA,IAAMqB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;EAC7BF,MAAM,EAAE;IACJG,WAAW,EAAE,MADT;IAEJC,YAAY,EAAE;MACVC,KAAK,EAAE,CADG;MAEVd,MAAM,EAAE;IAFE,CAFV;IAMJe,aAAa,EAAE,IANX;IAOJC,YAAY,EAAE,GAPV;IAQJnB,SAAS,EAAE,CARP;IASJoB,UAAU,EAAE;EATR;AADqB,CAAlB,CAAf;AAaA,eAAe5B,IAAf"},"metadata":{},"sourceType":"module"}